package com.mep.database.mapper;

import com.mep.database.entity.Post;
import com.mep.database.entity.PostExample.Criteria;
import com.mep.database.entity.PostExample.Criterion;
import com.mep.database.entity.PostExample;
import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;

public class PostSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table post
     *
     * @mbg.generated Fri Aug 11 15:38:28 MMT 2017
     */
    public String countByExample(PostExample example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("\"post\"");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table post
     *
     * @mbg.generated Fri Aug 11 15:38:28 MMT 2017
     */
    public String deleteByExample(PostExample example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("\"post\"");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table post
     *
     * @mbg.generated Fri Aug 11 15:38:28 MMT 2017
     */
    public String insertSelective(Post record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("\"post\"");
        
        if (record.getPostId() != null) {
            sql.VALUES("\"post_id\"", "#{postId,jdbcType=INTEGER}");
        }
        
        if (record.getAdminId() != null) {
            sql.VALUES("\"admin_id\"", "#{adminId,jdbcType=INTEGER}");
        }
        
        if (record.getCategoryId() != null) {
            sql.VALUES("\"category_id\"", "#{categoryId,jdbcType=INTEGER}");
        }
        
        if (record.getPostTitleEng() != null) {
            sql.VALUES("\"post_title_eng\"", "#{postTitleEng,jdbcType=VARCHAR}");
        }
        
        if (record.getPostTitleMmr() != null) {
            sql.VALUES("\"post_title_mmr\"", "#{postTitleMmr,jdbcType=VARCHAR}");
        }
        
        if (record.getPostTitleImgUrl() != null) {
            sql.VALUES("\"post_title_img_url\"", "#{postTitleImgUrl,jdbcType=VARCHAR}");
        }
        
        if (record.getPostContent() != null) {
            sql.VALUES("\"post_content\"", "#{postContent,jdbcType=VARCHAR}");
        }
        
        if (record.getCreatedDate() != null) {
            sql.VALUES("\"created_date\"", "#{createdDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdatedDate() != null) {
            sql.VALUES("\"updated_date\"", "#{updatedDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getContentType() != null) {
            sql.VALUES("\"content_type\"", "#{contentType,jdbcType=INTEGER}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table post
     *
     * @mbg.generated Fri Aug 11 15:38:28 MMT 2017
     */
    public String selectByExample(PostExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("\"post_id\"");
        } else {
            sql.SELECT("\"post_id\"");
        }
        sql.SELECT("\"admin_id\"");
        sql.SELECT("\"category_id\"");
        sql.SELECT("\"post_title_eng\"");
        sql.SELECT("\"post_title_mmr\"");
        sql.SELECT("\"post_title_img_url\"");
        sql.SELECT("\"post_content\"");
        sql.SELECT("\"created_date\"");
        sql.SELECT("\"updated_date\"");
        sql.SELECT("\"content_type\"");
        sql.FROM("\"post\"");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table post
     *
     * @mbg.generated Fri Aug 11 15:38:28 MMT 2017
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        Post record = (Post) parameter.get("record");
        PostExample example = (PostExample) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("\"post\"");
        
        if (record.getPostId() != null) {
            sql.SET("\"post_id\" = #{record.postId,jdbcType=INTEGER}");
        }
        
        if (record.getAdminId() != null) {
            sql.SET("\"admin_id\" = #{record.adminId,jdbcType=INTEGER}");
        }
        
        if (record.getCategoryId() != null) {
            sql.SET("\"category_id\" = #{record.categoryId,jdbcType=INTEGER}");
        }
        
        if (record.getPostTitleEng() != null) {
            sql.SET("\"post_title_eng\" = #{record.postTitleEng,jdbcType=VARCHAR}");
        }
        
        if (record.getPostTitleMmr() != null) {
            sql.SET("\"post_title_mmr\" = #{record.postTitleMmr,jdbcType=VARCHAR}");
        }
        
        if (record.getPostTitleImgUrl() != null) {
            sql.SET("\"post_title_img_url\" = #{record.postTitleImgUrl,jdbcType=VARCHAR}");
        }
        
        if (record.getPostContent() != null) {
            sql.SET("\"post_content\" = #{record.postContent,jdbcType=VARCHAR}");
        }
        
        if (record.getCreatedDate() != null) {
            sql.SET("\"created_date\" = #{record.createdDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdatedDate() != null) {
            sql.SET("\"updated_date\" = #{record.updatedDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getContentType() != null) {
            sql.SET("\"content_type\" = #{record.contentType,jdbcType=INTEGER}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table post
     *
     * @mbg.generated Fri Aug 11 15:38:28 MMT 2017
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("\"post\"");
        
        sql.SET("\"post_id\" = #{record.postId,jdbcType=INTEGER}");
        sql.SET("\"admin_id\" = #{record.adminId,jdbcType=INTEGER}");
        sql.SET("\"category_id\" = #{record.categoryId,jdbcType=INTEGER}");
        sql.SET("\"post_title_eng\" = #{record.postTitleEng,jdbcType=VARCHAR}");
        sql.SET("\"post_title_mmr\" = #{record.postTitleMmr,jdbcType=VARCHAR}");
        sql.SET("\"post_title_img_url\" = #{record.postTitleImgUrl,jdbcType=VARCHAR}");
        sql.SET("\"post_content\" = #{record.postContent,jdbcType=VARCHAR}");
        sql.SET("\"created_date\" = #{record.createdDate,jdbcType=TIMESTAMP}");
        sql.SET("\"updated_date\" = #{record.updatedDate,jdbcType=TIMESTAMP}");
        sql.SET("\"content_type\" = #{record.contentType,jdbcType=INTEGER}");
        
        PostExample example = (PostExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table post
     *
     * @mbg.generated Fri Aug 11 15:38:28 MMT 2017
     */
    public String updateByPrimaryKeySelective(Post record) {
        SQL sql = new SQL();
        sql.UPDATE("\"post\"");
        
        if (record.getAdminId() != null) {
            sql.SET("\"admin_id\" = #{adminId,jdbcType=INTEGER}");
        }
        
        if (record.getCategoryId() != null) {
            sql.SET("\"category_id\" = #{categoryId,jdbcType=INTEGER}");
        }
        
        if (record.getPostTitleEng() != null) {
            sql.SET("\"post_title_eng\" = #{postTitleEng,jdbcType=VARCHAR}");
        }
        
        if (record.getPostTitleMmr() != null) {
            sql.SET("\"post_title_mmr\" = #{postTitleMmr,jdbcType=VARCHAR}");
        }
        
        if (record.getPostTitleImgUrl() != null) {
            sql.SET("\"post_title_img_url\" = #{postTitleImgUrl,jdbcType=VARCHAR}");
        }
        
        if (record.getPostContent() != null) {
            sql.SET("\"post_content\" = #{postContent,jdbcType=VARCHAR}");
        }
        
        if (record.getCreatedDate() != null) {
            sql.SET("\"created_date\" = #{createdDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdatedDate() != null) {
            sql.SET("\"updated_date\" = #{updatedDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getContentType() != null) {
            sql.SET("\"content_type\" = #{contentType,jdbcType=INTEGER}");
        }
        
        sql.WHERE("\"post_id\" = #{postId,jdbcType=INTEGER}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table post
     *
     * @mbg.generated Fri Aug 11 15:38:28 MMT 2017
     */
    protected void applyWhere(SQL sql, PostExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}